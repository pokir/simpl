# PRINTING

println {
  # Prints with a newline
  print!
  '\n' . print! @_
}


print_stack {
  stack_size! @ counter
  counter . duplicate!
  & {
    counter . 0 . <= ? {
      @_
      ^
    }
    @_

    println!
    @_

    counter . 1 . -
    @ counter
  }
}


# STACK MANIPULATION

pop {
  # Pops n number of items from the stack
  @ counter

  & {
    counter .  0 . <= ? {
      @_         # remove the boolean result
      ^
    }
    @_           # remove the boolean result
    counter .  1 . -
    @ counter
  }
}

flip {
  # TODO: make this a function that flips n items on the stack
  # Example: 0 0 0 1 1 1
  # 3 . flip!
  # should give 1 1 1 0 0 0
}


# TYPES

is_str {
  type_of! 'str' . ==
}


is_num {
  type_of! 'num' . ==
}


is_bool {
  type_of! 'bool' . ==
}


# MATH

floor {
  1 . duplicate!
  1 . %
  -
}


ceil {
  floor!
  1 . +
}


round {
  0.5 . +
  floor!
}


pow {
  # TODO: allow fractional exponents
  @ exponent
  @ base

  exponent . @ counter

  1 .

  exponent . 0 . >= ? {
    @_
    & {
      counter . 0 . <= ? {
        @_
        ^
      }
      @_

      counter . 1 . - @ counter

      base . *
    }
    ->
  }
  @_
  
  exponent . 0 . < ? {
    @_

    counter . -1 . * @ counter

    & {
      counter . 0 . <= ? {
        @_
        ^
      }
      @_

      counter . 1 . - @ counter

      base . /
    }
    ->
  }
  @_
}
